{% extends "documentation/reference/component" %}

{% block componentDetails %}
	<p>
		The <code>macro</code> tag allows you to create a chunk of reusable and dynamic 
		content. The macro can be called multiple times in the current template or even
		from another template with the help of the <code><a href="import">import</a></code> 
		tag.
	</p>
	
	<p>
		It doesn't matter where in the current template you define a macro, i.e. 
		whether it's before or after you call it. Here is an example of how
		to define a macro:
		
		<pre><code>{{ 
'
{% macro input(type, name, value) %}
	<input type="{{ type }}" name="{{ name }}" value="{{ value }}" />
{% endmacro %}
'
		| trim | escape }}</code></pre>
	</p>
	
	<p>
		And now the macro can be called numerous times throughout the template, like so:
		<pre><code>{{ 
'
	{{ input("text", "name", "Mitchell") }}
'
		| trim | escape }}</code></pre>
		
		If the macro resides in another template, use the <code><a href="import">import</a></code>
		tag first.
		<pre><code>{{ 
'
{% import "form_util" %}
{{ input("text", "name", "Mitchell") }}
'
		| trim | escape }}</code></pre>
		
	</p>
	
	<p>
		A macro does not have access to the same variables that the rest of the template has access to.
		A macro can only work with the variables provided as arguments.
	</p>

{% endblock componentDetails %}
	